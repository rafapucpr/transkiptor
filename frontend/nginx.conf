# Upstream backend with retry logic
upstream backend_upstream {
    server backend:8000 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name localhost;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Proxy API calls to backend
    location /api/ {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Connection and retry settings
        proxy_connect_timeout       10s;
        proxy_send_timeout          300s;
        proxy_read_timeout          300s;
        proxy_next_upstream         error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries   3;
        proxy_next_upstream_timeout 60s;
        
        # Handle CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Buffer settings for large uploads
        client_max_body_size        5G;
        proxy_buffering            off;
        proxy_request_buffering    off;
        
        # Error handling
        error_page 502 503 504 = @backend_error;
    }
    
    # Error handling for backend connectivity issues
    location @backend_error {
        add_header Content-Type application/json always;
        return 503 '{"error": "Backend service temporarily unavailable. Please try again in a few moments."}';
    }
    
    # Serve static files
    location / {
        try_files $uri $uri/ =404;
    }
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;
}