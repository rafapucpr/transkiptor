# Multi-stage build for production
FROM python:3.12 as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Note: whisper.cpp binaries already exist in tools/whisper_cpp/
# We'll use the existing binaries but need to handle GLIBC compatibility

# Set work directory
WORKDIR /app

# Copy production requirements and install dependencies
COPY requirements-prod.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-prod.txt

# Production stage  
FROM python:3.12

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV ENV=production
ENV LD_LIBRARY_PATH="/app/tools/whisper_cpp"

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy Python dependencies from builder stage
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code (whisper.cpp binaries included)
COPY . .

# Create logs directory and set permissions
RUN mkdir -p /app/logs && chown -R appuser:appuser /app

# Create appuser home directory and cache directory with correct permissions
RUN mkdir -p /home/appuser/.cache && \
    chown -R appuser:appuser /home/appuser && \
    chmod -R 755 /home/appuser

# Set executable permissions for whisper.cpp and configure LD_LIBRARY_PATH
RUN chmod +x /app/tools/whisper_cpp/main && \
    echo 'export LD_LIBRARY_PATH="/app/tools/whisper_cpp:$LD_LIBRARY_PATH"' >> /home/appuser/.bashrc

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Command to run the application (production settings)
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--access-log"]