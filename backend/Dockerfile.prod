# Multi-stage build for production
FROM python:3.12 as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Build whisper.cpp with correct GLIBC
RUN git clone https://github.com/ggerganov/whisper.cpp.git /tmp/whisper.cpp && \
    cd /tmp/whisper.cpp && \
    git checkout v1.7.6 && \
    mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON .. && \
    cmake --build . --config Release && \
    mkdir -p /app/tools/whisper_cpp && \
    cp bin/main /app/tools/whisper_cpp/ && \
    cp *.so* /app/tools/whisper_cpp/ && \
    cd /tmp && \
    wget -O /app/tools/whisper_cpp/ggml-base.bin https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-base.bin && \
    rm -rf /tmp/whisper.cpp

# Set work directory
WORKDIR /app

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Production stage  
FROM python:3.12

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV ENV=production
ENV LD_LIBRARY_PATH="/app/tools/whisper_cpp:$LD_LIBRARY_PATH"

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy Python dependencies from builder stage
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy compiled whisper.cpp from builder stage
COPY --from=builder /app/tools/whisper_cpp /app/tools/whisper_cpp

# Copy application code
COPY . .

# Create logs directory and set permissions
RUN mkdir -p /app/logs && chown -R appuser:appuser /app

# Create appuser home directory and cache directory with correct permissions
RUN mkdir -p /home/appuser/.cache && \
    chown -R appuser:appuser /home/appuser && \
    chmod -R 755 /home/appuser

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Command to run the application (production settings)
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--access-log"]